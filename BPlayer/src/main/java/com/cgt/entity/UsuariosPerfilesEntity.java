/*
 * Created on 6 abr 2016 ( Time 20:03:19 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.cgt.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Persistent class for entity stored in table "USUARIOS_PERFILES"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="USUARIOS_PERFILES", schema="CINETI" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UsuariosPerfilesEntity.countAll", query="SELECT COUNT(x) FROM UsuariosPerfilesEntity x" )
} )
@SequenceGenerator(name= "usuariosPerfiles_id_seq_gen", sequenceName="CINETI.SEQ_USUARIOS_PERFILES", allocationSize=5,initialValue=100)
public class UsuariosPerfilesEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(generator = "usuariosPerfiles_id_seq_gen", strategy = GenerationType.SEQUENCE)
    @Column(name="ID_USUA_PERFIL", nullable=false)
    private Long     idUsuarioPerfil    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
	// "idPerfil" (column "ID_PERFIL") is not defined by itself because used as FK in a link 
	// "idPrivilegio" (column "ID_PRIVILEGIO") is not defined by itself because used as FK in a link 
	@Column(name="ID_USUARIO")
    private Long idUsuario   ;
	
	@Column(name="ID_PERFIL")
    private Long idTipoPerfil   ;
	
	@Column(name="ID_PRIVILEGIO")
    private Long idTipoPrivilegio   ;

    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="ID_PRIVILEGIO", referencedColumnName="ID_PRIVILEGIO", insertable=false, updatable=false)
    private TipoPrivilegiosEntity tipoPrivilegio;

    @ManyToOne
    @JoinColumn(name="ID_PERFIL", referencedColumnName="ID_PERFIL", insertable=false, updatable=false)
    private TipoPerfilesEntity tipoPerfil;

    @ManyToOne
    @JoinColumn(name="ID_USUARIO", referencedColumnName="ID_USUARIO", insertable=false, updatable=false)
    private UsuariosEntity usuarios    ;
	

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UsuariosPerfilesEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    
    

	
	
    public Long getIdUsuarioPerfil() {
		return idUsuarioPerfil;
	}

	public void setIdUsuarioPerfil(Long idUsuarioPerfil) {
		this.idUsuarioPerfil = idUsuarioPerfil;
	}

	public Long getIdUsuario() {
		return idUsuario;
	}

	public void setIdUsuario(Long idUsuario) {
		this.idUsuario = idUsuario;
	}

	public Long getIdTipoPerfil() {
		return idTipoPerfil;
	}

	public void setIdTipoPerfil(Long idTipoPerfil) {
		this.idTipoPerfil = idTipoPerfil;
	}

	public Long getIdTipoPrivilegio() {
		return idTipoPrivilegio;
	}

	public void setIdTipoPrivilegio(Long idTipoPrivilegio) {
		this.idTipoPrivilegio = idTipoPrivilegio;
	}

	public TipoPrivilegiosEntity getTipoPrivilegio() {
		return tipoPrivilegio;
	}

	public void setTipoPrivilegio(TipoPrivilegiosEntity tipoPrivilegio) {
		this.tipoPrivilegio = tipoPrivilegio;
	}

	public TipoPerfilesEntity getTipoPerfil() {
		return tipoPerfil;
	}

	public void setTipoPerfil(TipoPerfilesEntity tipoPerfil) {
		this.tipoPerfil = tipoPerfil;
	}

	public UsuariosEntity getUsuarios() {
		return usuarios;
	}

	public void setUsuarios(UsuariosEntity usuarios) {
		this.usuarios = usuarios;
	}

	@Override
	public String toString() {
		return "UsuariosPerfilesEntity [idUsuarioPerfil=" + idUsuarioPerfil + ", idUsuario=" + idUsuario
				+ ", idTipoPerfil=" + idTipoPerfil + ", idTipoPrivilegio=" + idTipoPrivilegio + ", tipoPrivilegio="
				+ tipoPrivilegio + ", tipoPerfil=" + tipoPerfil + ", usuarios=" + usuarios + "]";
	}


}
